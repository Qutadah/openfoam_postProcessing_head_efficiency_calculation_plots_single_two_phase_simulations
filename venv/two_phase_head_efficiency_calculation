import matplotlib.pyplot as plt
import pandas as pd
import sys
import math
import numpy as np
import tikzplotlib
import os

##steps to calculate:

#0- set N rpm
#1- change Qw
#2- change files
#3- change skip rows value

n= 1450; rho= 997; g= 9.81; Qw= 68.4/3600     #pressure difference


df1 = pd.read_csv('fieldValueDelta.dat', sep='\t', skiprows=1500, header=None)
df1= df1.rename(columns={0:'time', 1:'del_p'})
print(df1)
#df1=df1.mean
#del_p= df1['del_p'].mean
del_p= df1['del_p'].mean(axis=0)
#print(df1)
print(del_p)
h= del_p/ (g * rho)
print('Head of the pump is: {:6f}'.format(h))


########################## Efficiency from forcesIncompressible #######################

## Create Dataframes from forcesAir.dat


########################################### air ##############################

df_air = pd.read_csv('forcesAir.dat', sep='\t', skiprows=1500, header=None)
df_air = df_air.rename(columns={0:'time', 1:'bs'})
def parse_col(row_iter):
  row_iter=row_iter.replace(')) ((',',').replace(') (', ',').replace('))','').replace('((','').replace(' ',',').split(',')
  return row_iter

cols_air = ['f_pressure', 'f_viscous', 'm_pressure', 'm_viscous']
df_air['bs'] = df_air['bs'].apply(lambda x : parse_col(x))
data_df_air = df_air['bs'].apply(pd.Series)
data_df_air= data_df_air.astype(np.float64)

print(data_df_air)

mean_air= np.mean(data_df_air)
moment_yaxis_air= mean_air[7]+mean_air[10]

########################################### water ##############################

df_water = pd.read_csv('forcesWater.dat', sep='\t', skiprows=1500, header=None)
df_water = df_water.rename(columns={0:'time', 1:'bs'})
def parse_col(row_iter):
  row_iter=row_iter.replace(')) ((',',').replace(') (', ',').replace('))','').replace('((','').replace(' ',',').split(',')
  return row_iter

cols_water = ['f_pressure', 'f_viscous', 'm_pressure', 'm_viscous']
df_water['bs'] = df_water['bs'].apply(lambda x : parse_col(x))
data_df_water = df_water['bs'].apply(pd.Series)
data_df_water= data_df_water.astype(np.float64)

print(data_df_water)

mean_water= np.mean(data_df_water)
moment_yaxis_water= mean_water[7]+mean_water[10]


######################################## addition of both water and air phases ##################################################################

moment_yaxis = moment_yaxis_air + moment_yaxis_water


omega= 2*math.pi*n/60
Pu= rho * g * h * Qw
#print(Pu)
P= moment_yaxis * omega
eta= (Pu/P)* 100

print('efficiency of the pump at flow rate {0:1f} m^3/h is {1:.3%}'.format(Qw*3600, eta/100))


